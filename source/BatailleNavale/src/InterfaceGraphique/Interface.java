/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfaceGraphique;

import Controleur.Controleur;
import Controleur.CtrlInterface;
import bataillenavale.BDManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 * Classe Interface est un singleton qui contient les informations sur l'interface graphique
 * 
 * @author gounonj
 */
public final class Interface extends javax.swing.JFrame {

    private static volatile Interface instance = null;
    /**
     * Contient les differentes pages que l'on peut afficher
     */
    private PageAccueil pageAccueil;    
    private PageInscription pageInscription;
    private PageJoueur pageJoueur;
    private PageNouvellePartie pageNouvellePartie;
    private PagePartieEnCours pagePartieEnCours;
    private PagePartieReplay pagePartieReplay;    
    
    /**
     * Créer la JFrame principale qui va contenir les JPanel nommés PageXXX 
     */
    private Interface() {
        super();
        initComponents();
        fixRootPane();       
    }
    /**
     * Retourne l'instance de l'interface, et la créer si elle n'existe pas deja
     * 
     * @return Interface
     */
    public final static Interface getInstance() {     
         if (Interface.instance == null) {
           
            synchronized(Interface.class) {
              if (Interface.instance == null) {
                Interface.instance = new Interface();
              }
            }
         }
         return Interface.instance;
     }
    /**
     * Methode autogenere grace a l'outil netbeans
     * 
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 281, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Fixe la panel racine de la frame
     */
    private void fixRootPane() {
        this.setRootPane(rootPane);
    }
    
    /**
     * Permet de fermer la connexion lors de la fermeture de la fenetre.
     * @param evt 
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
      Controleur.getInstance().getCtrlInterface().fermerConnexion(); 
    }//GEN-LAST:event_formWindowClosing

    /**
     * Oouvre la connexion lors de l'ouveture de la fenetre
     * @param evt 
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      Controleur.getInstance().getCtrlInterface().ouvrirConnexion();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }    
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Interface.getInstance().setVisible(true);
                Interface.getInstance().setPageAccueil();
            }            
        });
    }
    
    /**
     * Affiche un message d'erreur 
     * 
     * @param  message Sring 
     */
    public void afficherMessageErreur(String message) {
        JOptionPane jop3 = new JOptionPane();
        jop3.showMessageDialog(null, message, "Erreur", JOptionPane.ERROR_MESSAGE);
        jop3.setVisible(true);
        this.revalidate();
    }
    
    /**
     * Affiche un message d'information
     * @param message 
     */
    public void afficherMessageInfo(String message) {
        JOptionPane jop3 = new JOptionPane();
        jop3.showMessageDialog(null, message, "Attention", JOptionPane.INFORMATION_MESSAGE);
        jop3.setVisible(true);
        this.revalidate();
    }
    
    /**
     * Retourne la page accueil
     * @return Jpanel 
     */
    public PageAccueil getPageAccueil() {
        return pageAccueil;
    }

    /**
     * Retourne la page d'inscription
     * @return Jpanel 
     */
    public PageInscription getPageInscription() {
        return pageInscription;
    }

    /**
     * Retourne la page du joueur
     * @return Jpanel 
     */
    public PageJoueur getPageJoueur() {
        return pageJoueur;
    }

    /**
     * Retourne la page nouvelle partie
     * @return Jpanel 
     */
    public PageNouvellePartie getPageNouvellePartie() {
        return pageNouvellePartie;
    }

    /**
     * Retourne la page pour les parties en cours
     * @return Jpanel 
     */
    public PagePartieEnCours getPagePartieEnCours() {
        return pagePartieEnCours;
    }

    /**
     * Retourne la page pour les parties en replay
     * @return Jpanel 
     */
    public PagePartieReplay getPagePartieReplay() {
        return pagePartieReplay;
    }
    
    /**
     * Fixe la JPanel courante a la page nouvelle partie
     */
    public void setPageNouvellePartie(){
        this.pageNouvellePartie = new PageNouvellePartie();
        Interface.getInstance().setContentPane(this.pageNouvellePartie);
        Interface.getInstance().revalidate();
    }
    
    /**
     * Fixe la JPanel courante a la page accueil
     */
    public void setPageAccueil(){
        this.pageAccueil = new PageAccueil();
        Interface.getInstance().setContentPane(this.pageAccueil);
        Interface.getInstance().revalidate();
    }
    
    /**
     * Fixe la JPanel courante a la page inscription
     */
    public void setPageInscription(){
        this.pageInscription = new PageInscription();
        Interface.getInstance().setContentPane(this.pageInscription);
        Interface.getInstance().revalidate();
    }
    
    /**
     * Fixe la JPanel courante a la page joueur
     */
    public void setPageJoueur(){
        this.pageJoueur = new PageJoueur();
        Interface.getInstance().setContentPane(this.pageJoueur);
        Interface.getInstance().revalidate();
    }
    
    /**
     * Fixe la JPanel courante a la page partie en cours
     */
    public void setPagePartieEnCours(){
        this.pagePartieEnCours = new PagePartieEnCours();
        Interface.getInstance().setContentPane(this.pagePartieEnCours);
        Interface.getInstance().revalidate();
        Controleur.getInstance().getCtrlPartieEnCours().rafraichirAffichageEtatBateau();
    }
    
    /**
     * Fixe la JPanel courante a la page des parties replay
     */
    public void setPagePartieReplay(){
        this.pagePartieReplay = new PagePartieReplay();
        Interface.getInstance().setContentPane(this.pagePartieReplay);
        Interface.getInstance().revalidate();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
